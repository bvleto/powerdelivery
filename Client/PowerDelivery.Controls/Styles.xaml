<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="0 0 10 0" />
        <Setter Property="FontSize" Value="14" />
    </Style>
    
    <Style TargetType="ListView">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="TextBlock" x:Key="PageTitle">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
    </Style>

    <Style TargetType="Page">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
    </Style>
    
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
    </Style>
    
    <Style TargetType="Border" x:Key="EnvironmentBlockStyle">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="118" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Padding" Value="7" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="In Progress">
                <Setter Property="Background" Value="CornflowerBlue" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Succeeded">
                <Setter Property="Background" Value="Green" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Partially Succeeded">
                <Setter Property="Background" Value="Gold" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Failed">
                <Setter Property="Background" Value="Firebrick" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Stopped">
                <Setter Property="Background" Value="Firebrick" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Unknown Status">
                <Setter Property="Background" Value="#dddddd" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Loading">
                <Setter Property="Background" Value="#dddddd" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="EnvironmentBlockButtonText">
        <Style.Triggers>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="In Progress">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Succeeded">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Partially Succeeded">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Failed">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Stopped">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Unknown Status">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Loading">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=EnvironmentBlockButton}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="#eee" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="EnvironmentBlockText">
        <Style.Triggers>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="In Progress">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Succeeded">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Partially Succeeded">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Failed">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Stopped">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Unknown Status">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastStatus.Description}" Value="Loading">
                <Setter Property="Foreground" Value="Black" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="Button" x:Key="CommandButtonTemplate">
        <Border>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource CommandButtonBackgroundColor}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Padding" Value="10" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CommandButtonBackgroundHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource CommandButtonBackgroundDisabledColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
        </Border>
    </ControlTemplate>
    
    <Style TargetType="Button" x:Key="CommandButton">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}" />
        <Setter Property="Template" Value="{StaticResource CommandButtonTemplate}" />
    </Style>

    <Style TargetType="Border" x:Key="PipelineActionPanel">
        <Setter Property="CornerRadius" Value="6 6 0 0" />
        <Setter Property="Margin" Value="0 0 10 20" />
        <Setter Property="Background" Value="{DynamicResource PipelineActionPanelColor}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CommandButtonText">
        <Setter Property="Foreground" Value="{DynamicResource CommandButtonForegroundColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommandButtonForegroundHoverColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="PipelineButtonText">
        <Setter Property="Foreground" Value="{DynamicResource PipelineButtonForegroundColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PipelineButtonForegroundHoverColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate TargetType="Button" x:Key="PipelineButtonTemplate">
        <Border>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource PipelineButtonBackgroundColor}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Padding" Value="10" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PipelineButtonBackgroundHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource PipelineButtonBackgroundDisabledColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
        </Border>
    </ControlTemplate>
    
    <Style TargetType="Button" x:Key="PipelineButton">
        <Setter Property="Template" Value="{StaticResource PipelineButtonTemplate}" />
    </Style>

    <Style TargetType="RichTextBox" x:Key="PowerShellConsoleTextBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="{DynamicResource PowerShellConsoleBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource PowerShellConsoleForegroundColor}" />
        <Setter Property="Padding" Value="10 0 0 0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
    </Style>

    <Style TargetType="StackPanel" x:Key="PageActions">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    
    <Style TargetType="StackPanel" x:Key="HeaderPanel">
        <Setter Property="Margin" Value="0 0 0 10" />
    </Style>
    
    <Style TargetType="Label" x:Key="FieldDirections">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="0 0 0 7" />
    </Style>
    
    <Style TargetType="TextBlock" x:Key="PageDescription">
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
    </Style>
    
    <Style TargetType="TextBlock" x:Key="DialogDescription">
        <Setter Property="Margin" Value="0 10 0 10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource LabelColor}" />
    </Style>
    
    <Style TargetType="Label" x:Key="FieldExample">
        <Setter Property="Margin" Value="15 0 0 0" />
        <Setter Property="Foreground" Value="{DynamicResource FieldExampleColor}" />
    </Style>
    
    <Style TargetType="Grid" x:Key="Background">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
    </Style>

</ResourceDictionary>